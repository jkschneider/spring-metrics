plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

dependencies {
    api project(':micrometer-core')

    implementation 'io.projectreactor:reactor-core'
    implementation('io.projectreactor.netty:reactor-netty') {
        exclude module: 'netty-codec-http2'
        exclude module: 'netty-codec-http'
    }

    testImplementation project(':micrometer-test')
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'ch.qos.logback:logback-classic'
    testImplementation 'org.awaitility:awaitility'
}

shadowJar {
    configurations = [project.configurations.compileClasspath]
    archiveClassifier.set('')
    dependencies {
        include(dependency('io.projectreactor:'))
        include(dependency('io.projectreactor.netty:'))
        include(dependency('org.reactivestreams:reactive-streams'))
        include(dependency('io.netty:'))
    }
    relocate 'reactor', 'io.micrometer.shaded.reactor'
    relocate 'org.reactivestreams', 'io.micrometer.shaded.org.reactorstreams'
    relocate 'io.netty', 'io.micrometer.shaded.io.netty'
    exclude 'META-INF/native/libnetty_transport_native_epoll_x86_64.so'
    metaInf {
        from "$rootDir/LICENSE"
        from "$rootDir/NOTICE"
    }
}

// The Nebula Publishing plugin automatically configures the publication of the shadow jar but
// shadow dependencies are added to the POM as runtime so we manually clean up the POM.
publishing {
    publications {
        withType(MavenPublication) {
            pom.withXml {
                asNode()
                    .dependencies
                    .dependency
                    .findAll { ['reactor-core', 'reactor-netty'].contains(it.artifactId.text()) }
                    .each { it.parent().remove(it) }
            }
        }
    }
}
